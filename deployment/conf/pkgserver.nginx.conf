# Setup logging to include request time and bytes sent, 
log_format pkgserver_logformat '$remote_addr [$time_local] "$request" $status $body_bytes_sent "$http_user_agent" $request_time $http_julia_version $http_julia_system "$http_julia_ci_variables" $http_julia_interactive "$http_julia_pkg_server"';

server {
    # This block of code templated in from ${LISTEN_BLOCK_SRC}
${LISTEN_BLOCK}

    # For our content-addressed resources, our happy path is to look in the cache
    # for the requested content:
    location ~ /(registry|package|artifact)/ {
        # Everything served from here are gzipped tarballs but it is not
        # recognized by nginx since the files don't have the .tar.gz file
        # extension so we set the following headers manually.
        add_header Content-Type application/tar;
        add_header Content-Encoding gzip;

        root /caches/pkgserver;
        try_files $uri @pkgserver;
    }

    # Our default mode is to proxy things off to the `@pkgserver`.  This `try_files` directive
    # is a simple hack to redirect to the shared location below with no performance penalty.
    # See https://serverfault.com/a/965779/46426 for more details and the appropriate amount
    # of purist hand-wringing over using a hack like this.
    try_files /dev/null @pkgserver;

    # Pass all pkgserver traffic off to pkgserver:8000
    location @pkgserver {
        proxy_pass http://pkgserver:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
    }

    access_log /logs/access_${FQDN}.log pkgserver_logformat buffer=4k flush=1m;
    error_log  /logs/error_${FQDN}.log;
}
